<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>David Nadlinger</title>
 <link href="http://klickverbot.at/blog/tags/Debugging/atom.xml" rel="self"/>
 <link href="http://klickverbot.at/"/>
 <updated>2023-07-06T14:46:30-04:00</updated>
 <id>http://klickverbot.at/blog/tags/Debugging/</id>
 <author>
   <name>David Nadlinger</name>
   <email>atom@klickverbot.at</email>
 </author>

 
 <entry>
   <title>Debugging KDE applications with gdb</title>
   <link href="http://klickverbot.at/blog/2009/01/debugging-kde-applications-with-gdb/"/>
   <updated>2009-01-24T00:00:00-05:00</updated>
   <id>http://klickverbot.at/blog/2009/01/debugging-kde-applications-with-gdb</id>
   <content type="html">A pretty long time has passed since my last post here, and in the meantime I have jumped right into KDE development myself. I have stumbled upon quite a few tricks and pitfalls that I will undoubtedly write about here some day.

For now, I just want to share a little gem which I have discovered a few minutes ago: In [@kdesdk/scripts@], David Faure published a little script called [@kde-devel-gdb@] (&quot;view with WebSVN&quot;:http://websvn.kde.org/trunk/KDE/kdesdk/scripts/kde-devel-gdb?view=markup), which extends gdb with the ability to print the contents of several Qt containers, including the widely used [@QString@]. Highly recommended!
</content>
 </entry>
 
</feed>
