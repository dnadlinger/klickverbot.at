<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 <title>David Nadlinger</title>
 <link href="http://klickverbot.at/blog/tags/Mercurial/atom.xml" rel="self"/>
 <link href="http://klickverbot.at/"/>
 <updated>2023-07-06T14:46:30-04:00</updated>
 <id>http://klickverbot.at/blog/tags/Mercurial/</id>
 <author>
   <name>David Nadlinger</name>
   <email>atom@klickverbot.at</email>
 </author>

 
 <entry>
   <title>git reset using Mercurial</title>
   <link href="http://klickverbot.at/blog/2011/01/git-reset-using-mercurial/"/>
   <updated>2011-01-09T00:00:00-05:00</updated>
   <id>http://klickverbot.at/blog/2011/01/git-reset-using-mercurial</id>
   <content type="html">I am mainly a &quot;Git&quot;:http://git-scm.com user, but lately I have been working with &quot;Mercurial&quot;:http://mercurial.selenic.com/ from time to time. I have been mostly using it for basic committing though, so I still occasionally end up with a commit I did not mean to create like this when performing more advanced operations. But undoing that can&apos;t be too hard, right?

For example, I recently toyed around with &quot;Mercurial Queues&quot;:http://mercurial.selenic.com/wiki/MqExtension to emulate Git&apos;s staging area, one of the features that seem trivial, but which you don&apos;t want to miss at any cost once you are used to it. Doing so, while being at, let&apos;s say, revision @1000@, I accidentally created two changesets, @1001@ and @1002@. Now, how do I get rid of these while still keeping the contents of them in the working copy? Using Git, this would just be @git reset HEAD~2@. But unfortunately, Mercurial seems to make your life somewhat hard in this case, this is what I came up with (please leave me a message in the comments in case I missed an easier way):

&lt;figure class=&apos;code&apos;&gt; &lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;hg update -r1000
&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

This sets the working copy to the last »good« revision, only to …

&lt;figure class=&apos;code&apos;&gt; &lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;hg revert --all -r1002
&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

… bring the changes from the two commits back to the working copy (but without committing them this time), so we can now …

&lt;figure class=&apos;code&apos;&gt; &lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;hg strip --force 1001
&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

… strip the two changesets from the history.

I am perfectly aware of the fact that any other SCM tool will probably seem clumsy at first if I am used to Git (besides the fact that Git seems to be a natural fit for the way I think about versioning), but I still wonder whether there a deeper reason for Mercurial not to support this more directly.
</content>
 </entry>
 
</feed>
